// Copyright 2022 The Tari Project
// SPDX-License-Identifier: BSD-3-Clause

syntax = "proto3";

package tari.dan.consensus;

import "common.proto";
import "transaction.proto";

message HotStuffMessage {
  oneof message {
    NewViewMessage new_view = 1;
    ProposalMessage proposal = 2;
    VoteMessage vote = 3;
  }
}

message NewViewMessage {
  QuorumCertificate high_qc = 1;
}

message ProposalMessage {
  Block block = 1;
}

message VoteMessage {
  uint64 epoch = 1;
  bytes block_id = 2;
  QuorumDecision decision = 3;
  tari.dan.common.SignatureAndPublicKey signature = 4;
  bytes merkle_proof = 5;
}

message Block {
  bytes parent_id = 1;
  QuorumCertificate justify = 2;
  uint64 height = 3;
  uint64 epoch = 4;
  uint64 round = 5;
  bytes proposed_by = 6;
  bytes merkle_root = 7;
  repeated Command commands = 8;
}

message Command {
  oneof command {
    TransactionAtom prepare = 1;
    TransactionAtom local_prepared = 2;
    TransactionAtom accept = 3;
  }
}

message TransactionAtom {
  bytes id = 1;
  repeated bytes involved_shards = 2;
  Decision decision = 3;
  Evidence evidence = 4;
  uint64 fee = 5;
}

enum Decision {
  UNKNOWN = 0;
  ACCEPT = 1;
  REJECT = 2;
}

message Evidence {
  bytes encoded_evidence = 1;
}

message ShardPledge {
  bytes shard_id = 1;
  bytes node_hash = 2;
  ObjectPledge pledge = 3;
}

message QuorumCertificate {
  bytes block_id = 1;
  uint64 block_height = 2;
  uint64 epoch = 3;
  repeated tari.dan.common.SignatureAndPublicKey signatures = 4;
  bytes merged_proof = 5;
  repeated bytes leaf_hashes = 6;
  QuorumDecision decision = 7;
}

message HotStuffTreeNode {
  bytes parent = 1;
  bytes payload_id = 2;
  uint64 height = 3;
  bytes shard = 4;
  uint64 payload_height = 5;
  ObjectPledge local_pledge = 6;
  uint64 epoch = 7;
  bytes proposed_by = 8;
  QuorumCertificate justify = 9;
  TariDanPayload payload = 10;
  uint64 leader_round = 11;
}

message ValidatorMetadata {
  bytes public_key = 1;
  bytes vn_shard_key = 2;
  tari.dan.common.Signature signature = 3;
}

message TariDanPayload {
  tari.dan.transaction.Transaction transaction = 1;
}


enum QuorumDecision {
  QUORUM_DECISION_UNKNOWN = 0;
  QUORUM_DECISION_ACCEPT = 1;
  QUORUM_DECISION_REJECT = 2;
}

message ObjectPledge {
  bytes shard_id = 1;
  SubstateState current_state = 2;
  bytes pledged_to_payload = 3;
}

message SubstateState {
  oneof state {
    bool does_not_exist = 1;
    UpState up = 2;
    DownState down = 3;
  }
}

message UpState {
  bytes created_by = 1;
  bytes address = 2;
  bytes data = 3;
  uint64 fees_accrued = 4;
}

message DownState {
  bytes deleted_by = 1;
  uint64 fees_accrued = 2;
}
