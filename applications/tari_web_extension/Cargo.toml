[package]
name = "tari_web_extension_wasm"
authors = ["The Tari Development Community"]
description = "The Tari web extension wasm"
repository = "https://github.com/tari-project/tari"
license = "BSD-3-Clause"
version = "0.50.0-pre.0"
edition = "2021"

[lib]
crate-type = ["cdylib"]

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true

[features]
# If you uncomment this line, it will enable `wee_alloc`:
#default = ["wee_alloc"]

[dependencies]
js-sys = "0.3.61"
lazy_static = "1.4.0"
serde_json = "1.0.85"
serde-wasm-bindgen = "0.4"
wasm-bindgen = "0.2.84"
wasm-bindgen-futures = "0.4.34"

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. However, it is slower than the default
# allocator, so it's not enabled by default.
wee_alloc = { version = "0.4.2", optional = true }

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "0.3.61"
features = [
    'MessageEvent',
    'Request',
    'RequestInit',
    'RequestMode',
    'Response',
    'RtcConfiguration',
    'RtcDataChannel',
    'RtcIceCandidate',
    'RtcIceCredentialType',
    'RtcIceServer',
    'RtcPeerConnection',
    'RtcPeerConnectionIceEvent',
    'RtcSdpType',
    'RtcSessionDescriptionInit',
    "Window"
]

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
[target."cfg(debug_assertions)".dependencies]
console_error_panic_hook = "0.1.5"

# These crates are used for running unit tests.
[dev-dependencies]
wasm-bindgen-test = "0.3.34"
futures = "0.1.27"
