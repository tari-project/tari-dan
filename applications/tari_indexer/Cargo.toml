[package]
name = "tari_indexer"
description = "The Tari DAN indexer implementation"
version.workspace = true
edition.workspace = true
authors.workspace = true
repository.workspace = true
license.workspace = true

[dependencies]
minotari_app_utilities = { workspace = true }
tari_bor = { workspace = true }
tari_common = { workspace = true }
tari_common_types = { workspace = true }
tari_crypto = { workspace = true }
tari_shutdown = { workspace = true }
tari_dan_app_utilities = { workspace = true }
tari_dan_common_types = { workspace = true }
tari_base_node_client = { workspace = true }
tari_dan_engine = { workspace = true }
tari_dan_storage = { workspace = true }
tari_dan_storage_sqlite = { workspace = true }
tari_state_store_sqlite = { workspace = true }
tari_epoch_manager = { workspace = true }
tari_engine_types = { workspace = true }
tari_indexer_client = { workspace = true }
tari_indexer_lib = { workspace = true }
tari_template_lib = { workspace = true }
tari_transaction = { workspace = true }
tari_dan_p2p = { workspace = true }
tari_validator_node_rpc = { workspace = true }
tari_rpc_framework = { workspace = true }
tari_networking = { workspace = true }

anyhow = { workspace = true }
axum = { workspace = true }
async-graphql = { workspace = true }
async-graphql-axum = { workspace = true }
axum-jrpc = { workspace = true, features = ["anyhow_error"] }
clap = { workspace = true, features = ["derive", "env"] }
config = { workspace = true }
diesel = { workspace = true, default-features = false, features = [
    "sqlite",
    "returning_clauses_for_sqlite_3_35",
    "chrono",
] }
diesel_migrations = { workspace = true }
futures = { workspace = true }
include_dir = { workspace = true }
libp2p = { workspace = true }
log = { workspace = true, features = ["std"] }
log4rs = { workspace = true, features = [
    "rolling_file_appender",
    "compound_policy",
    "size_trigger",
    "fixed_window_roller",
] }
mime_guess = { workspace = true }
reqwest = { workspace = true }
serde = { workspace = true, features = ["default", "derive"] }
serde_json = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = [
    "default",
    "macros",
    "time",
    "sync",
    "rt-multi-thread",
] }
tower-http = { workspace = true, features = ["default", "cors"] }
url = { workspace = true, features = ["serde"] }

[package.metadata.cargo-machete]
ignored = [
    # Want to enable some log4rs features
    "log4rs",
]

[features]
ts = [] # this is just for the build script to skip the build
