# A sample log configuration file for running in release mode. By default, this configuration splits up log messages to
# three destinations:
#    * Console: For log messages with level INFO and higher
#    * log/validator-node/network.log: INFO-level logs related to the comms crate. This file will be quite busy since there
#      are lots of P2P debug messages, and so this traffic is segregated from the application log messages
#    * log/validator-node/dan_layer.log: Non-comms related INFO-level messages and higher are logged into this file
#    * log/validator-node/other.log: Third-party crates' messages will be logged here at an ERROR level
#
#  See https://docs.rs/log4rs/0.8.3/log4rs/encode/pattern/index.html for deciphering the log pattern. The log format
#  used in this sample configuration prints messages as:
#  timestamp [target] LEVEL message
refresh_rate: 30 seconds
appenders:
  # An appender named "stdout" that writes to stdout
  stdout:
    kind: console
    encoder:
      pattern: "{d(%H:%M)} [{t}] {h({l}):5} {m} [{f}:{L}]{n}"
    filters:
      - kind: threshold
        level: info

  # An appender named "stdout" that writes to stdout
  stdout_warn:
    kind: console
    encoder:
      pattern: "{d(%H:%M)} {h({l}):5} {m} [{f}:{L}]{n}"
    filters:
      - kind: threshold
        level: warn

  # An appender named "dan_layer" that writes to a file with a custom pattern encoder
  dan_layer:
    kind: rolling_file
    path: "{{log_dir}}/dan_layer.log"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 10mb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "{{log_dir}}/dan_layer.{}.log"
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S)} [{t}] {l:5} {m}// {f}:{L}{n}"


  # An appender named "network" that writes to a file with a custom pattern encoder
  network:
    kind: rolling_file
    path: "{{log_dir}}/network.log"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 10mb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "{{log_dir}}/network.{}.log"
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S.%f)} [{t}] [Thread:{I}] {l:5} {m} // {f}:{L}{n}"

  # An appender named "base_layer" that writes to a file with a custom pattern encoder
  base_layer:
    kind: rolling_file
    path: "{{log_dir}}/base_layer.log"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 10mb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "{{log_dir}}/base_layer.{}.log"
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S.%f)} [{t}] [{X(node-public-key)},{X(node-id)}] {l:5} {m} // {f}:{L}{n}"

  # An appender named "other" that writes to a file with a custom pattern encoder
  other:
    kind: rolling_file
    path: "log/validator-node/other.log"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 10mb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "log/validator-node/other.{}.log"
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S.%f)} [{t}] [{X(node-public-key)},{X(node-id)}] {l:5} {m} // {f}:{L}{n}"

root:
  level: warn
  appenders:
    - stdout_warn
    - other

loggers:
  tari::application:
    level: debug
    appenders:
      - stdout
      - dan_layer
    additive: false

  tari::validator_node:
    level: debug
    appenders:
      - stdout
      - dan_layer
    additive: false

  tari::dan:
    level: info
    appenders:
      - dan_layer
      - stdout
    additive: false

  tari::indexer:
    level: debug
    appenders:
      - stdout
      - dan_layer
    additive: false

  # Route log events sent to the "core" logger to the "base_layer" appender
  c:
    level: info
    appenders:
      - base_layer
  # Route log events sent to the "wallet" logger to the "base_layer" appender
  wallet:
    level: info
    appenders:
      - base_layer
  # Route log events sent to the "comms" logger to the "network" appender
  comms:
    level: info
    appenders:
      - network
  # Route log events sent to the "p2p" logger to the "network" appender
  p2p:
    level: info
    appenders:
      - network
